version: '3'

volumes:
  pg_data:
  static:
  media:

services:

  db:
    container_name: db
    image: postgres:13.10
    env_file: ../.env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    restart: always

  backend:
    container_name: backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file: ../.env
    volumes:
      - static:/backend_static/
      - media:/app/media/
    depends_on:
      - db
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: nginx
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/var/html/static/
      - media:/var/html/media/
    depends_on:
      - backend
      - frontend

# version: '3.3'

# volumes:
#   pg_data:
#   static:
#   media:

# services:
#   db:
#     image: postgres:13.10
#     env_file: ../.env
#     volumes:
#       - pg_data:/var/lib/postgresql/data
#     #networks:
#     # - django-network
  
#   backend:
#     image: nemnogospaal/foodgram_backend
#     env_file: ../.env
#     volumes:
#       - static:/backend_static
#       - media:/app/media
#     #networks:
#     #  - django-network
#     depends_on:
#       - db

#   frontend:
#     image: nemnogospaal/foodgram_frontend
#     command: cp -r /app/build/. /static/
#     volumes:
#      # - ../frontend/:/app/result_build/
#       - static:/static/
#     depends_on:
#       - db

#   nginx:
#     image: nginx:1.19.3
#     ports:
#       - 9000:80
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - ../frontend/build:/usr/share/nginx/html/
#       - ../docs/:/usr/share/nginx/html/api/docs/
#       - static:/staticfiles/
#       - media:/app/media
#     depends_on:
#       - backend
#       - frontend
#     #networks:
#     #  - django-network
# #networks:
# #  django-network:
# #    driver: bridge